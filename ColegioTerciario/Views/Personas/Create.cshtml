@model ColegioTerciario.DAL.Models.Persona

@{
    ViewBag.Title = "Create";
}

<div class="row">
    <div class="col-md-12">
        <div class="portlet light">
            <div class="portlet-title">
                <div class="caption">Formulario de Alta de Persona</div>
                <div class="actions"></div>
            </div>
            <div class="portlet-body form">
                @Html.Partial("_PersonaForm", Model)
                <!--
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_NOMBRE, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PERSONA_NOMBRE, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PERSONA_NOMBRE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_APELLIDO, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PERSONA_APELLIDO, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PERSONA_APELLIDO, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_DOCUMENTO_TIPO, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("PERSONA_DOCUMENTO_TIPO", new List<SelectListItem>
                            {
                            new SelectListItem { Text = "D.N.I.", Value = "D.N.I."},
                            new SelectListItem { Text = "PASAPORTE", Value = "PASAPORTE"},
                            new SelectListItem { Text = "OTROS", Value = "OTROS"},
                            }, "SELECCIONE TIPO DOC", htmlAttributes: new { @class = "form-control" })


                                @Html.ValidationMessageFor(model => model.PERSONA_DOCUMENTO_TIPO, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_DOCUMENTO_NUMERO, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PERSONA_DOCUMENTO_NUMERO, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PERSONA_DOCUMENTO_NUMERO, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_NACIMIENTO_FECHA, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PERSONA_NACIMIENTO_FECHA, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                @Html.ValidationMessageFor(model => model.PERSONA_NACIMIENTO_FECHA, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_EMAIL, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PERSONA_EMAIL, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PERSONA_EMAIL, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_DOMICILIO, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PERSONA_DOMICILIO, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PERSONA_DOMICILIO, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_TELEFONO, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PERSONA_TELEFONO, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PERSONA_TELEFONO, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_SEXO, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PERSONA_SEXO, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PERSONA_SEXO, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_FECHA_ALTA, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PERSONA_FECHA_ALTA, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                @Html.ValidationMessageFor(model => model.PERSONA_FECHA_ALTA, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_FECHA_BAJA, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PERSONA_FECHA_BAJA, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                @Html.ValidationMessageFor(model => model.PERSONA_FECHA_BAJA, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_TITULO_SECUNDARIO, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PERSONA_TITULO_SECUNDARIO, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PERSONA_TITULO_SECUNDARIO, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_OBSERVACION, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PERSONA_OBSERVACION, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PERSONA_OBSERVACION, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_FOTO, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PERSONA_FOTO, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PERSONA_FOTO, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_CUIL, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PERSONA_CUIL, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PERSONA_CUIL, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_ES_ALUMNO, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.PERSONA_ES_ALUMNO, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PERSONA_ES_ALUMNO, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_ES_DOCENTE, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.PERSONA_ES_DOCENTE, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PERSONA_ES_DOCENTE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_ES_NODOCENTE, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.PERSONA_ES_NODOCENTE, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PERSONA_ES_NODOCENTE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_NACIMIENTO_PAIS_ID, "Pais", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">

                                <input id="PERSONA_NACIMIENTO_PAIS_ID" name="PERSONA_NACIMIENTO_PAIS_ID" value="" type="text" />
                                @Html.ValidationMessageFor(model => model.PERSONA_NACIMIENTO_PAIS_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_NACIMIENTO_PROVINCIA_ID, "Provincia", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input id="PERSONA_NACIMIENTO_PROVINCIA_ID" name="PERSONA_NACIMIENTO_PROVINCIA_ID" value="" type="text" />
                                @Html.ValidationMessageFor(model => model.PERSONA_NACIMIENTO_PROVINCIA_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_NACIMIENTO_CIUDAD_ID, "Ciudad", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input id="PERSONA_NACIMIENTO_CIUDAD_ID" name="PERSONA_NACIMIENTO_CIUDAD_ID" type="text" value="" />
                                @Html.ValidationMessageFor(model => model.PERSONA_NACIMIENTO_CIUDAD_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PERSONA_NACIMIENTO_BARRIO_ID, "Barrio", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input id="PERSONA_NACIMIENTO_BARRIO_ID" name="PERSONA_NACIMIENTO_BARRIO_ID" type="text" value="" />
                                @Html.ValidationMessageFor(model => model.PERSONA_NACIMIENTO_BARRIO_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Guardar" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
                    -->
                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var pageSize = 20;
        $(document).ready(function () {

            $("#PERSONA_NACIMIENTO_PAIS_ID").select2(
            {
                //placeholder: 'Enter name',
                //Does the user have to enter any data before sending the ajax request
                minimumInputLength: 3,
                allowClear: true,
                ajax: {
                    //How long the user has to pause their typing before sending the next request
                    quietMillis: 150,
                    //The url of the json service
                    url: "/Datos/GetPaises",
                    dataType: 'jsonp',
                    //Our search term and what page we are on
                    data: function (term, page) {
                        return {
                            pageSize: pageSize,
                            pageNum: page,
                            searchTerm: term
                        };
                    },
                    results: function (data, page) {
                        //Used to determine whether or not there are more results available,
                        //and if requests for more data should be sent in the infinite scrolling
                        var more = (page * pageSize) < data.Total;
                        return { results: data.Results, more: more };
                    }
                }
            });

            $("#PERSONA_NACIMIENTO_PROVINCIA_ID").select2(
            {
                //placeholder: 'Enter name',
                //Does the user have to enter any data before sending the ajax request
                minimumInputLength: 3,
                allowClear: true,
                ajax: {
                    //How long the user has to pause their typing before sending the next request
                    quietMillis: 150,
                    //The url of the json service
                    url: "/Datos/GetProvincias",
                    dataType: 'jsonp',
                    //Our search term and what page we are on
                    data: function (term, page) {
                        return {
                            pageSize: pageSize,
                            pageNum: page,
                            searchTerm: term
                        };
                    },
                    results: function (data, page) {
                        //Used to determine whether or not there are more results available,
                        //and if requests for more data should be sent in the infinite scrolling
                        var more = (page * pageSize) < data.Total;
                        return { results: data.Results, more: more };
                    }
                }
            });

            $("#PERSONA_NACIMIENTO_CIUDAD_ID").select2(
            {
                //placeholder: 'Enter name',
                //Does the user have to enter any data before sending the ajax request
                minimumInputLength: 3,
                allowClear: true,
                ajax: {
                    //How long the user has to pause their typing before sending the next request
                    quietMillis: 150,
                    //The url of the json service
                    url: "/Datos/GetCiudades",
                    dataType: 'jsonp',
                    //Our search term and what page we are on
                    data: function (term, page) {
                        return {
                            pageSize: pageSize,
                            pageNum: page,
                            searchTerm: term
                        };
                    },
                    results: function (data, page) {
                        //Used to determine whether or not there are more results available,
                        //and if requests for more data should be sent in the infinite scrolling
                        var more = (page * pageSize) < data.Total;
                        return { results: data.Results, more: more };
                    }
                }
            });

            $("#PERSONA_NACIMIENTO_BARRIO_ID").select2(
            {
                //placeholder: 'Enter name',
                //Does the user have to enter any data before sending the ajax request
                minimumInputLength: 3,
                allowClear: true,
                ajax: {
                    //How long the user has to pause their typing before sending the next request
                    quietMillis: 150,
                    //The url of the json service
                    url: "/Datos/GetBarrios",
                    dataType: 'jsonp',
                    //Our search term and what page we are on
                    data: function (term, page) {
                        return {
                            pageSize: pageSize,
                            pageNum: page,
                            searchTerm: term
                        };
                    },
                    results: function (data, page) {
                        //Used to determine whether or not there are more results available,
                        //and if requests for more data should be sent in the infinite scrolling
                        var more = (page * pageSize) < data.Total;
                        return { results: data.Results, more: more };
                    }
                }
            });
        });
    </script>
}
