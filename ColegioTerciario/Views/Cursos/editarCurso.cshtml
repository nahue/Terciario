@model IEnumerable<ColegioTerciario.DAL.Models.Materia_x_Curso>

@{
    ViewBag.Title = "editarCurso";
}

<div class="row">
    <div class="col-md-12">
        <div class="block-header">
            <h2>
                Materias del curso @ViewBag.NOMBRE
                <small>Ciclo @ViewBag.CICLO</small>
            </h2>
        </div>
        <div class="card">
            <div class="card-header">
                <ul class="actions">
                    <li class="dropdown">
                        <a href="" data-toggle="dropdown" aria-expanded="false">
                            <i class="zmdi zmdi-more-vert"></i>
                        </a>

                        <ul class="dropdown-menu pull-right">
                            <li>
                                <a href="#" data-toggle="modal" data-target="#agregarAlumnosModal">
                                    Agregar alumnos al curso
                                </a>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
            <div class="card-body card-padding">
                @using MvcFlash.Core.Extensions;
                @Html.Flash()
                <table class="table table-hover">
                    <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Reportes</th>
                        <th>Acciones</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @item.MATERIA_X_CURSO_MATERIA.MATERIA_NOMBRE
                            </td>
                            <td>
                                <div class="btn-group">
                                    @Html.ActionLink("Planilla Asistencias - Todos", "ImprimirPlanillaVacia", "Asistencias", new { cursoId = item.ID }, new { @class = "btn btn-xs btn-default waves-effect bgm-bluegray" })
                                    <button type="button" class="btn btn-xs btn-default dropdown-toggle waves-effect bgm-bluegray" data-toggle="dropdown" aria-expanded="false">
                                        <span class="caret"></span>
                                        <span class="sr-only">Split button dropdowns</span>
                                    </button>
                                    <ul class="dropdown-menu bgm-bluegray" role="menu">
                                        <li>
                                            @Html.ActionLink("Planilla Asistencias - Regulares", "ImprimirPlanillaVacia", "Asistencias", new { cursoId = item.ID, @tipo = "regulares" }, null)
                                    </li>
                                    <li class="divider"></li>
                                    <li>@Html.ActionLink("Parcial 1", "PDF", new { id = item.ID, instancia = "P1" })</li>
                                    <li>@Html.ActionLink("Recuperatorio 1", "PDF", new { id = item.ID, instancia = "R1" })</li>
                                    <li>@Html.ActionLink("Parcial 2", "PDF", new { id = item.ID, instancia = "P2" })</li>
                                    <li>@Html.ActionLink("Recuperatorio 2", "PDF", new { id = item.ID, instancia = "R2" })</li>
                                </ul>
                                </div>
                            </td>
                            <td>
                                <div class="btn-group">
                                    @Html.ActionLink("Editar", "Edit", new { id = item.ID }, new { @class = "btn btn-xs btn-default waves-effect bgm-bluegray" })
                                    <button type="button" class="btn btn-xs btn-default dropdown-toggle waves-effect bgm-bluegray" data-toggle="dropdown" aria-expanded="false">
                                        <span class="caret"></span>
                                        <span class="sr-only">Split button dropdowns</span>
                                    </button>
                                    <ul class="dropdown-menu bgm-bluegray" role="menu">
                                        <li>
                                            <a href="/#/Curso/@item.ID/Asistencias/Nueva">Tomar Asistencia</a>
                                            <a href="/Asistencias/Exportar/@item.ID">Exportar Asistencias a Excel</a>
                                            @*Html.ActionLink("Tomar Asistencia", "Nueva", "Asistencias", new { cursoId = item.ID }, null)*@

                                        </li>
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="agregarAlumnosModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Agregar Alumnos</h4>
            </div>
            <div class="modal-body">
                <table class="table data-table table-bordered table-read-status">
                    <thead>
                        <tr>
                            <th style="display: none;">ID</th>
                            <th>Nombre</th>
                            <th>Apellido</th>
                            <th>DNI</th>
                            <th>Agregar</th>
                        </tr>
                    </thead>
                    <tbody>

                        <tr>

                            <td colspan="6" class="dataTables_empty">
                                Loading data from server

                            </td>

                        </tr>

                    </tbody>

                </table>
                <div class="row">
                    <div class="col-md-12 listadoAlumnosParaAgregar">

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm("agregarAlumnosACurso", "Cursos", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("Ciclo", (string)ViewBag.CICLO)
                    @Html.Hidden("Nombre", (string)ViewBag.NOMBRE)

                    <ul id="alumnosSeleccionados"></ul>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                    <input id="AgregarAlumnos" type="submit" class="btn btn-primary" value="Guardar" />
                }

            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
@section scripts {

    <script type="text/javascript">
        var alumnos = [];



        $.extend(true, $.fn.dataTable.defaults, {
            "sDom": "<'row'<'col-xs-6'l><'col-xs-6'f>r>t<'row'<'col-xs-4'i><'col-xs-8'p>>",
        });

        $(document).on('click', '.agregar-persona-a-curso', function () {
            $(this).css('pointer-events', 'none').css('color', 'black');
            alumnos.push($(this).data('id'));
            if (alumnos.length > 1)
                $('#AgregarAlumnos').val("Agregar " + alumnos.length + " alumnos");
            else
                $('#AgregarAlumnos').val("Agregar " + alumnos.length + " alumno");

            $('.listadoAlumnosParaAgregar').append($(this).data('nombre') + " | ");

            $('form').append('<input type="hidden" name="alumnos" value="' + $(this).data('id') + '"/>');
        });

        var $dataTable = $('.data-table').dataTable({
            "aaSorting": [[1, "desc"]], // default sort to Name
            "bServerSide": true,
            "sAjaxSource": "/api/Personas/GetPersonas",
            "iDisplayLength": 4,
            columns: [
                { data: "ID", visible: false },
                { data: "PERSONA_NOMBRE" },
                { data: "PERSONA_APELLIDO" },
                { data: "PERSONA_DOCUMENTO_NUMERO" },
                { data: null }
            ],
            columnDefs: [
                {
                    targets: 4,
                    data: null,
                    render: function (data, type, row) {
                        var id = row["ID"];
                        var nombre = row["PERSONA_NOMBRE"];
                        var apellido = row["PERSONA_APELLIDO"];
                        return '<td><a href="#" class="add agregar-persona-a-curso" data-id="' + id + '" data-nombre="' + nombre + " " + apellido + '"><i class="cus-plus" title="Agregar"></i>Agregar</a></td>';
                    },
                    createdCell: function (cell, cellData, rowData, rowIndex, colIndex) {
                        var id = parseInt(rowData["ID"]);
                        var enArray = $.inArray(id, alumnos);
                        if (enArray > -1) {
                            var $link = $(cell).find('a');
                            $link.css('pointer-events', 'none').css('color', 'black');
                        }
                    }
                }
            ]
        });

        $('.data-table').on('page.dt', function (e, settings) {
            console.log(settings.aoColumns[0].mRender);
        });

        $(document).ready(function() {
            $('#agregarAlumnosModal').on('shown.bs.modal', function (e) {
                $(this).find('.dataTables_filter input').focus();
            });
        });
    </script>
}
